{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\nolim\\\\Desktop\\\\ReduxStore\\\\Main\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import React from'react';import{Link}from'react-router-dom';import{pluralize}from'../../utils/helpers';import{useDispatch,useSelector}from'react-redux';import{ADD_TO_CART,UPDATE_CART_QUANTITY}from'../../utils/actions';import{idbPromise}from'../../utils/helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductItem(item){var dispatch=useDispatch();var state=useSelector(function(state){return state;});var image=item.image,name=item.name,_id=item._id,price=item.price,quantity=item.quantity;var cart=state.cart;var addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===_id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:_id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});idbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1})});idbPromise('cart','put',_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card px-1 py-1\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/products/\".concat(_id),children:[/*#__PURE__*/_jsx(\"img\",{alt:name,src:\"/images/\".concat(image)}),/*#__PURE__*/_jsx(\"p\",{children:name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[quantity,\" \",pluralize('item',quantity),\" in stock\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",price]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:addToCart,children:\"Add to cart\"})]});}export default ProductItem;","map":{"version":3,"sources":["C:/Users/nolim/Desktop/ReduxStore/Main/client/src/components/ProductItem/index.js"],"names":["React","Link","pluralize","useDispatch","useSelector","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","ProductItem","item","dispatch","state","image","name","_id","price","quantity","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,CAAsBC,oBAAtB,KAAkD,qBAAlD,CACA,OAASC,UAAT,KAA2B,qBAA3B,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACzB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,KAAK,CAAGP,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAAzB,CAEA,GAAQC,CAAAA,KAAR,CAA8CH,IAA9C,CAAQG,KAAR,CAAeC,IAAf,CAA8CJ,IAA9C,CAAeI,IAAf,CAAqBC,GAArB,CAA8CL,IAA9C,CAAqBK,GAArB,CAA0BC,KAA1B,CAA8CN,IAA9C,CAA0BM,KAA1B,CAAiCC,QAAjC,CAA8CP,IAA9C,CAAiCO,QAAjC,CAEA,GAAQC,CAAAA,IAAR,CAAiBN,KAAjB,CAAQM,IAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACP,GAAT,GAAiBA,GAA/B,EAAV,CAAnB,CACA,GAAIK,UAAJ,CAAgB,CACdT,QAAQ,CAAC,CACPY,IAAI,CAAEhB,oBADC,CAEPQ,GAAG,CAAEA,GAFE,CAGPS,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKAhB,UAAU,CAAC,MAAD,CAAS,KAAT,gCACLY,UADK,MAERI,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAFlD,GAAV,CAID,CAVD,IAUO,CACLb,QAAQ,CAAC,CACPY,IAAI,CAAEjB,WADC,CAEPoB,OAAO,gCAAOhB,IAAP,MAAac,gBAAgB,CAAE,CAA/B,EAFA,CAAD,CAAR,CAIAhB,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBE,IAArB,MAA2Bc,gBAAgB,CAAE,CAA7C,GAAV,CACD,CACF,CAnBD,CAqBA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,MAAC,IAAD,EAAM,EAAE,qBAAeT,GAAf,CAAR,wBACE,YAAK,GAAG,CAAED,IAAV,CAAgB,GAAG,mBAAaD,KAAb,CAAnB,EADF,cAEE,mBAAIC,IAAJ,EAFF,GADF,cAKE,oCACE,uBACGG,QADH,KACcd,SAAS,CAAC,MAAD,CAASc,QAAT,CADvB,eADF,cAIE,4BAAQD,KAAR,GAJF,GALF,cAWE,eAAQ,OAAO,CAAEG,SAAjB,yBAXF,GADF,CAeD,CAED,cAAeV,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { image, name, _id, price, quantity } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>\n          {quantity} {pluralize('item', quantity)} in stock\n        </div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}